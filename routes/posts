const express = require("express");

const postsController = require("../controllers/posts");

const isAuth = require("../middleware/is-auth");

const router = express.Router();

// Posts Routes

router.get("/posts", isAuth, postsController.getPosts);

router.get("/post/:postId", isAuth, postsController.getPost);

router.post("/posts", isAuth, postsController.addPosts);

router.delete("/post/:postId", isAuth, postsController.deletePost);

router.put("/post/:postId", isAuth, postsController.updatePost);

// Comments Routes
router.get("/comment/:commentId", isAuth, postsController.getComment);

router.get("/commentForPost/:postId", isAuth, postsController.getComments);

router.post("/comment/:postId", isAuth, postsController.postComment);

router.delete("/comment/:commentId", isAuth, postsController.deleteComment);

router.put("/comment/:commentId", isAuth, postsController.updateComment);

// Reply Routes
router.post("/reply/:commentId", isAuth, postsController.postReply);

// Categories Routes
router.get("/category/:categoryId", isAuth, postsController.getCategory);

router.get("/category", isAuth, postsController.getCategories);

router.post("/category", postsController.postCategory);

router.delete("/category/:categoryId", isAuth, postsController.deleteCategory);

// Tags Routes
router.get("/tag/:tagId", isAuth, postsController.getTag);

router.get("/tag", isAuth, postsController.getTags);

router.post("/tag", isAuth, postsController.postTag);

router.put("/tag/:tagId", isAuth, postsController.updateTag);

router.delete("/tag/:tagId", isAuth, postsController.deleteTag);

module.exports = router;
